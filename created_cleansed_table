USE SCHEMA AIRBNB_DB.CURATED_ZONE;

USE WAREHOUSE SNOWFLAKE_WH;


CREATE OR REPLACE TRANSIENT TABLE AIRBNB_DB.CURATED_ZONE.CURATED_AMENITIES(
amenities_pk number autoincrement,
unified_id varchar,
month varchar,
hot_tub int,
pool int
);

select * from AIRBNB_DB.CURATED_ZONE.CURATED_AMENITIES_DEMO;
//inserting landing_zone table to curated_zone and perform transformation

INSERT INTO AIRBNB_DB.CURATED_ZONE.CURATED_AMENITIES
(unified_id ,
month ,
hot_tub ,
pool )
SELECT 
unified_id,
month ,
hot_tub ,
pool
FROM AIRBNB_DB.LANDING_ZONE.LANDING_AMENITIES;

select * from AIRBNB_DB.CURATED_ZONE.CURATED_AMENITIES;

CREATE OR REPLACE TRANSIENT TABLE AIRBNB_DB.CURATED_ZONE.CURATED_AMENITIES_CLEANSED AS 
SELECT AMENITIES_Pk as row_id,
    UNIFIED_ID,
    split_part(month , '-',1) as year,
    split_part(month,'-',2) as month,
    case when hot_tub = 1 then 'yes' else 'no' end as hot_tub,
    case when pool = 1 then 'yes' else 'no' end as pool
FROM AIRBNB_DB.CURATED_ZONE.CURATED_AMENITIES;


SELECT * FROM AIRBNB_DB.CURATED_ZONE.CURATED_AMENITIES_CLEANSED;




CREATE OR REPLACE TRANSIENT TABLE CURATED_GEOLOCATION(
geolocation_pk number autoincrement,
unified_id varchar,
month varchar,
street_name varchar,
latitude varchar,
longitude varchar
);

INSERT INTO AIRBNB_DB.CURATED_ZONE.CURATED_GEOLOCATION(
unified_id ,
month ,
street_name ,
latitude ,
longitude 
)
SELECT
unified_id ,
month ,
street_name ,
latitude ,
longitude 
FROM AIRBNB_DB.LANDING_ZONE.LANDING_GEOLOCATION;

SELECT * FROM AIRBNB_DB.CURATED_ZONE.CURATED_GEOLOCATION;

CREATE OR REPLACE TRANSIENT TABLE AIRBNB_DB.CURATED_ZONE.CURATED_GEOLOCATION_CLEANSED AS
SELECT
geolocation_pk as row_id,
unified_id,
split_part(month,'-',1) as year,
split_part(month,'-',2) as month,
street_name,
latitude,
longitude
FROM AIRBNB_DB.CURATED_ZONE.CURATED_GEOLOCATION;

SELECT * FROM AIRBNB_DB.CURATED_ZONE.CURATED_GEOLOCATION_CLEANSED;

